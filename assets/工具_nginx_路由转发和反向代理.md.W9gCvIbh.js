import{h as a,c as n,a as s,aS as p}from"./chunks/framework.C0YlqdvB.js";const u=JSON.parse('{"title":"Nginx 配置的三种方式","description":"","frontmatter":{},"headers":[],"relativePath":"工具/nginx/路由转发和反向代理.md","filePath":"工具/nginx/路由转发和反向代理.md"}'),e={name:"工具/nginx/路由转发和反向代理.md"},l=p(`<h1 id="nginx-配置的三种方式" tabindex="-1">Nginx 配置的三种方式 <a class="header-anchor" href="#nginx-配置的三种方式" aria-label="Permalink to &quot;Nginx 配置的三种方式&quot;">​</a></h1><p>第一种直接替换 location 匹配部分</p><p>第二种 proxy_pass 的目标地址，默认不带 /，表示只代理域名，url 和参数部分不会变（把请求的 path 拼接到 proxy_pass 目标域名之后作为代理的URL）</p><p>第三种 proxy_pass 的目标地址后增加 /，则表示把 path 中 location 匹配成功的部分剪切掉之后再拼接到 proxy_pass 目标地址</p><h2 id="location-匹配规则" tabindex="-1">location 匹配规则 <a class="header-anchor" href="#location-匹配规则" aria-label="Permalink to &quot;location 匹配规则&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>location [ = | ~ | ~* | ^~ ] uri { </span></span>
<span class="line"><span>   ...}</span></span></code></pre></div><h2 id="针对-location-截取代理路径的例子" tabindex="-1">针对 location 截取代理路径的例子 <a class="header-anchor" href="#针对-location-截取代理路径的例子" aria-label="Permalink to &quot;针对 location 截取代理路径的例子&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span> # shop-service</span></span>
<span class="line"><span> # 反向代理shop-service服务</span></span>
<span class="line"><span>location ^~ /shop/ {</span></span>
<span class="line"><span>       proxy_pass  http://44.179.118.54:8007/;</span></span>
<span class="line"><span>       proxy_http_version 1.1;</span></span>
<span class="line"><span>       proxy_set_header Upgrade $http_upgrade;</span></span>
<span class="line"><span>       proxy_set_header Connection &quot;upgrade&quot;;</span></span>
<span class="line"><span>       proxy_read_timeout 300s;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>       proxy_redirect    off;</span></span>
<span class="line"><span>       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span>       proxy_set_header X-Real-IP $remote_addr;</span></span>
<span class="line"><span>       proxy_set_header Host $http_host;</span></span>
<span class="line"><span>       proxy_next_upstream http_502 http_504 error timeout invalid_header;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 这里的效果和上面配置的效果一致</span></span>
<span class="line"><span>location ~ ^/addrdata/(.*) {</span></span>
<span class="line"><span>       proxy_pass  http://44.179.118.54:8007/$1$is_args$args;</span></span>
<span class="line"><span>       proxy_http_version 1.1;</span></span>
<span class="line"><span>       proxy_set_header Upgrade $http_upgrade;</span></span>
<span class="line"><span>       proxy_set_header Connection &quot;upgrade&quot;;</span></span>
<span class="line"><span>       proxy_read_timeout 300s;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>       proxy_redirect    off;</span></span>
<span class="line"><span>       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span>       proxy_set_header X-Real-IP $remote_addr;</span></span>
<span class="line"><span>       proxy_set_header Host $http_host;</span></span>
<span class="line"><span>       proxy_next_upstream http_502 http_504 error timeout invalid_header;</span></span>
<span class="line"><span>}</span></span></code></pre></div><h2 id="反向代理" tabindex="-1">反向代理 <a class="header-anchor" href="#反向代理" aria-label="Permalink to &quot;反向代理&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>server { </span></span>
<span class="line"><span>   </span></span>
<span class="line"><span>    listen       8888;</span></span>
<span class="line"><span>    server_name  19.11.11.70;</span></span>
<span class="line"><span>    client_max_body_size     10240m; #修改成自己的想要设置的å44;13Hclient_body_timeout 6000s;</span></span>
<span class="line"><span>    client_header_timeout 600;</span></span>
<span class="line"><span>    client_body_buffer_size 128m;</span></span>
<span class="line"><span>    send_timeout 300s;</span></span>
<span class="line"><span>    keepalive_timeout 300s;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    location /test-api { </span></span>
<span class="line"><span>   </span></span>
<span class="line"><span>        proxy_pass  http://19.11.11.71:8088/test-api;</span></span>
<span class="line"><span>        proxy_http_version 1.1;</span></span>
<span class="line"><span>        proxy_set_header Upgrade $http_upgrade;</span></span>
<span class="line"><span>        proxy_set_header Connection &quot;upgrade&quot;;</span></span>
<span class="line"><span>        proxy_read_timeout 300s;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        proxy_redirect    off;</span></span>
<span class="line"><span>        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span>        proxy_set_header X-Real-IP $remote_addr;</span></span>
<span class="line"><span>        proxy_set_header Host $http_host;</span></span>
<span class="line"><span>        proxy_next_upstream http_502 http_504 error timeout invalid_header;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre></div><h2 id="配置前端例子" tabindex="-1">配置前端例子 <a class="header-anchor" href="#配置前端例子" aria-label="Permalink to &quot;配置前端例子&quot;">​</a></h2><div class="language-# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 前端放置目录 /home/java/nginx/cn_abd-app/abd-app</span></span>
<span class="line"><span>location / { </span></span>
<span class="line"><span>   </span></span>
<span class="line"><span>    root /home/java/nginx/cn_abd-app/abd-app/;</span></span>
<span class="line"><span>    index index.html index.htm;</span></span>
<span class="line"><span>    try_files $uri $uri/ /index.html;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 非根目录配置前端</span></span>
<span class="line"><span># 前端放置目录 /home/java/nginx/cn_bbd-app/bbd-app</span></span>
<span class="line"><span>location /bbd-app { </span></span>
<span class="line"><span>   </span></span>
<span class="line"><span>    root   /home/java/nginx/cn_bbd-app/;</span></span>
<span class="line"><span>    index  index.html index.htm;</span></span>
<span class="line"><span>    try_files $uri $uri/ /bbd-app/index.html;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 非根目录配置二级路由前端</span></span>
<span class="line"><span># 前端放置目录 /home/java/nginx/cn_bbd-app/app/bbd-app</span></span>
<span class="line"><span>location /app/bbd-app { </span></span>
<span class="line"><span>   </span></span>
<span class="line"><span>    root   /home/java/nginx/cn_bbd-app/;</span></span>
<span class="line"><span>    index  index.html index.htm;</span></span>
<span class="line"><span>    try_files $uri $uri/ /app/bbd-app/index.html;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 非根目录配置hash路由前端</span></span>
<span class="line"><span># 前端放置目录 /home/java/nginx/cn_bbd-app/share </span></span>
<span class="line"><span>location /share { </span></span>
<span class="line"><span>   </span></span>
<span class="line"><span>    root /home/java/nginx/cn_bbd-app/;</span></span>
<span class="line"><span>    index index.html index.htm;</span></span>
<span class="line"><span> }</span></span></code></pre></div>`,12),i=[l];function t(o,r,c,d,_,h){return s(),n("div",null,i)}const b=a(e,[["render",t]]);export{u as __pageData,b as default};
