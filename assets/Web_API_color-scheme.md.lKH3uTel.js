import{h as n,a,c as s,K as l,a4 as h}from"./chunks/framework.3ipTa1RF.js";const t={},r={type:"text"};function o(i,e){return a(),s("input",r)}const c=n(t,[["render",o],["__scopeId","data-v-66b5ced9"]]),p=h(`<h1 id="color-scheme" tabindex="-1">Color Scheme <a class="header-anchor" href="#color-scheme" aria-label="Permalink to &quot;Color Scheme&quot;">​</a></h1><p>color-scheme CSS 属性允许元素指示它可以舒适地呈现哪些颜色方案。</p><h2 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-label="Permalink to &quot;语法&quot;">​</a></h2><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">color-scheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: normal;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">color-scheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: light;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">color-scheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: dark;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">color-scheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: light dark;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">color-scheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: only light;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 全局值 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">color-scheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: inherit;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">color-scheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: initial;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">color-scheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: revert;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">color-scheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">revert-layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">color-scheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: unset;</span></span></code></pre></div><h2 id="取值" tabindex="-1">取值 <a class="header-anchor" href="#取值" aria-label="Permalink to &quot;取值&quot;">​</a></h2><h3 id="normal" tabindex="-1">normal <a class="header-anchor" href="#normal" aria-label="Permalink to &quot;normal&quot;">​</a></h3><p>表示元素未指定任何配色方案，因此应使用浏览器的默认配色方案呈现。</p><h3 id="light" tabindex="-1">light <a class="header-anchor" href="#light" aria-label="Permalink to &quot;light&quot;">​</a></h3><p>表示可以使用操作系统亮色配色方案渲染元素。</p><h3 id="dark" tabindex="-1">dark <a class="header-anchor" href="#dark" aria-label="Permalink to &quot;dark&quot;">​</a></h3><p>表示可以使用操作系统深色配色方案渲染元素。</p><h3 id="only" tabindex="-1">only <a class="header-anchor" href="#only" aria-label="Permalink to &quot;only&quot;">​</a></h3><p>禁止用户代理覆盖元素的颜色方案。</p><p>可以使用 color-scheme: only light; 应用于特定的元素或 :root，以关闭由 Chrome 的自动深色主题引起的颜色覆盖。</p><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2>`,15),m=JSON.parse('{"title":"Color Scheme","description":"","frontmatter":{},"headers":[],"relativePath":"Web_API/color-scheme.md","filePath":"Web_API/color-scheme.md"}'),k={name:"Web_API/color-scheme.md"},_=Object.assign(k,{setup(i){return(e,d)=>(a(),s("div",null,[p,l(c)]))}});export{m as __pageData,_ as default};
